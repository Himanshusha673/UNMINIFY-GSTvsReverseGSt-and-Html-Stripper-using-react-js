{"ast":null,"code":"/**\n * Copyright 2014 Shape Security, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {\n  idContinueLargeRegex,\n  idContinueBool\n} = require('./unicode');\nfunction isIdentifierPartES6(char) {\n  let charCode = char.charCodeAt(0);\n  if (charCode < 128) {\n    return idContinueBool[charCode];\n  }\n  return idContinueLargeRegex.test(char);\n}\nfunction needsDoubleDot(fragment) {\n  return fragment.indexOf('.') < 0 && fragment.indexOf('e') < 0 && fragment.indexOf('x') < 0;\n}\nfunction renderNumber(n) {\n  let s;\n  if (n >= 1e3 && n % 10 === 0) {\n    s = n.toString(10);\n    if (/[eE]/.test(s)) {\n      return s.replace(/[eE]\\+/, 'e');\n    }\n    return n.toString(10).replace(/0{3,}$/, match => {\n      return 'e' + match.length;\n    });\n  } else if (n % 1 === 0) {\n    if (n > 1e15 && n < 1e20) {\n      return '0x' + n.toString(16).toUpperCase();\n    }\n    return n.toString(10).replace(/[eE]\\+/, 'e');\n  }\n  return n.toString(10).replace(/^0\\./, '.').replace(/[eE]\\+/, 'e');\n}\nclass TokenStream {\n  constructor() {\n    this.result = '';\n    this.lastNumber = null;\n    this.lastCodePoint = null;\n    this.lastTokenStr = '';\n    this.optionalSemi = false;\n    this.previousWasRegExp = false;\n    this.partialHtmlComment = false;\n  }\n  putNumber(number) {\n    let tokenStr = renderNumber(number);\n    this.put(tokenStr);\n    this.lastNumber = tokenStr;\n  }\n  putOptionalSemi() {\n    this.optionalSemi = true;\n  }\n  putRaw(tokenStr) {\n    this.result += tokenStr;\n    this.lastTokenStr = tokenStr;\n  }\n  put(tokenStr, isRegExp) {\n    if (this.optionalSemi) {\n      this.optionalSemi = false;\n      if (tokenStr !== '}') {\n        this.result += ';';\n        this.lastCodePoint = ';';\n        this.previousWasRegExp = false;\n      }\n    }\n    if (this.lastNumber !== null && tokenStr.length === 1) {\n      if (tokenStr === '.') {\n        this.result += needsDoubleDot(this.lastNumber) ? '..' : '.';\n        this.lastNumber = null;\n        this.lastCodePoint = '.';\n        return;\n      }\n    }\n    let tokenStrCodePointCount = [...tokenStr].length; // slow, no unicode length?\n    if (tokenStrCodePointCount > 0) {\n      this.lastNumber = null;\n      let rightCodePoint = String.fromCodePoint(tokenStr.codePointAt(0));\n      let lastCodePoint = this.lastCodePoint;\n      this.lastCodePoint = String.fromCodePoint(tokenStr.codePointAt(tokenStrCodePointCount - 1));\n      let previousWasRegExp = this.previousWasRegExp;\n      this.previousWasRegExp = isRegExp;\n      if (lastCodePoint && ((lastCodePoint === '+' || lastCodePoint === '-') && lastCodePoint === rightCodePoint || isIdentifierPartES6(lastCodePoint) && isIdentifierPartES6(rightCodePoint) || lastCodePoint === '/' && rightCodePoint === '/' || previousWasRegExp && rightCodePoint === 'i' || this.partialHtmlComment && tokenStr.startsWith('--'))) {\n        this.result += ' ';\n      }\n    }\n    this.partialHtmlComment = this.lastTokenStr.endsWith('<') && tokenStr === '!';\n    this.result += tokenStr;\n    this.lastTokenStr = tokenStr;\n  }\n}\nmodule.exports = {\n  needsDoubleDot,\n  TokenStream\n};","map":{"version":3,"names":["idContinueLargeRegex","idContinueBool","require","isIdentifierPartES6","char","charCode","charCodeAt","test","needsDoubleDot","fragment","indexOf","renderNumber","n","s","toString","replace","match","length","toUpperCase","TokenStream","constructor","result","lastNumber","lastCodePoint","lastTokenStr","optionalSemi","previousWasRegExp","partialHtmlComment","putNumber","number","tokenStr","put","putOptionalSemi","putRaw","isRegExp","tokenStrCodePointCount","rightCodePoint","String","fromCodePoint","codePointAt","startsWith","endsWith","module","exports"],"sources":["/Users/binarychai3/Documents/React js Projects/first-react/node_modules/shift-codegen/src/token-stream.js"],"sourcesContent":["/**\n * Copyright 2014 Shape Security, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { idContinueLargeRegex, idContinueBool } = require('./unicode');\n\nfunction isIdentifierPartES6(char) {\n  let charCode = char.charCodeAt(0);\n  if (charCode < 128) {\n    return idContinueBool[charCode];\n  }\n  return idContinueLargeRegex.test(char);\n}\n\nfunction needsDoubleDot(fragment) {\n  return fragment.indexOf('.') < 0 && fragment.indexOf('e') < 0 && fragment.indexOf('x') < 0;\n}\n\nfunction renderNumber(n) {\n  let s;\n  if (n >= 1e3 && n % 10 === 0) {\n    s = n.toString(10);\n    if (/[eE]/.test(s)) {\n      return s.replace(/[eE]\\+/, 'e');\n    }\n    return n.toString(10).replace(/0{3,}$/, match => {\n      return 'e' + match.length;\n    });\n  } else if (n % 1 === 0) {\n    if (n > 1e15 && n < 1e20) {\n      return '0x' + n.toString(16).toUpperCase();\n    }\n    return n.toString(10).replace(/[eE]\\+/, 'e');\n  }\n  return n.toString(10).replace(/^0\\./, '.').replace(/[eE]\\+/, 'e');\n\n}\n\nclass TokenStream {\n  constructor() {\n    this.result = '';\n    this.lastNumber = null;\n    this.lastCodePoint = null;\n    this.lastTokenStr = '';\n    this.optionalSemi = false;\n    this.previousWasRegExp = false;\n    this.partialHtmlComment = false;\n  }\n\n  putNumber(number) {\n    let tokenStr = renderNumber(number);\n    this.put(tokenStr);\n    this.lastNumber = tokenStr;\n  }\n\n  putOptionalSemi() {\n    this.optionalSemi = true;\n  }\n\n  putRaw(tokenStr) {\n    this.result += tokenStr;\n    this.lastTokenStr = tokenStr;\n  }\n\n  put(tokenStr, isRegExp) {\n    if (this.optionalSemi) {\n      this.optionalSemi = false;\n      if (tokenStr !== '}') {\n        this.result += ';';\n        this.lastCodePoint = ';';\n        this.previousWasRegExp = false;\n      }\n    }\n    if (this.lastNumber !== null && tokenStr.length === 1) {\n      if (tokenStr === '.') {\n        this.result += needsDoubleDot(this.lastNumber) ? '..' : '.';\n        this.lastNumber = null;\n        this.lastCodePoint = '.';\n        return;\n      }\n    }\n    let tokenStrCodePointCount = [...tokenStr].length; // slow, no unicode length?\n    if (tokenStrCodePointCount > 0) {\n      this.lastNumber = null;\n      let rightCodePoint = String.fromCodePoint(tokenStr.codePointAt(0));\n      let lastCodePoint = this.lastCodePoint;\n      this.lastCodePoint = String.fromCodePoint(tokenStr.codePointAt(tokenStrCodePointCount - 1));\n      let previousWasRegExp = this.previousWasRegExp;\n      this.previousWasRegExp = isRegExp;\n\n      if (lastCodePoint &&\n          ((lastCodePoint === '+' || lastCodePoint === '-') &&\n          lastCodePoint === rightCodePoint ||\n          isIdentifierPartES6(lastCodePoint) && isIdentifierPartES6(rightCodePoint) ||\n          lastCodePoint === '/' && rightCodePoint === '/' ||\n          previousWasRegExp && rightCodePoint === 'i' ||\n          this.partialHtmlComment && tokenStr.startsWith('--'))) {\n        this.result += ' ';\n      }\n    }\n\n    this.partialHtmlComment = this.lastTokenStr.endsWith('<') && tokenStr === '!';\n\n    this.result += tokenStr;\n    this.lastTokenStr = tokenStr;\n  }\n}\n\nmodule.exports = {\n  needsDoubleDot,\n  TokenStream,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}