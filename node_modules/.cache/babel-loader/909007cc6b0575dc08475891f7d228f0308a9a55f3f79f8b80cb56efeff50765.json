{"ast":null,"code":"const {\n  reduce,\n  MonoidalReducer\n} = require('shift-reducer');\n\n// TODO this file should live elsewhere\n\nclass SetMonoid {\n  // nb not immutable\n  constructor(set) {\n    this.set = set;\n  }\n  static empty() {\n    return new SetMonoid(new Set());\n  }\n  concat(b) {\n    return new SetMonoid(merge(this.set, b.set));\n  }\n  extract() {\n    return this.set;\n  }\n  add(e) {\n    // this happens to work, since, as used in StrictnessReducer, .add is never called until after something has been merged, so the identity element is never mutated.\n    // to do this in an immutable fashion, uncomment the line below. \n    // this.set = merge(new Set, this.set);\n    this.set.add(e);\n    return this;\n  }\n}\nfunction hasStrict(directives) {\n  return directives.some(d => d.rawValue === 'use strict');\n}\nfunction merge(s1, s2) {\n  let out = new Set();\n  s1.forEach(v => out.add(v));\n  s2.forEach(v => out.add(v));\n  return out;\n}\n\n// Given a Script, the analyze method returns a set containing all ArrowExpression, FunctionDeclaration, FunctionExpression, and Script nodes which are sloppy mode. All other ArrowExpression, FunctionDeclaration, FunctionExpression, and Script nodes are strict.\nmodule.exports = class StrictnessReducer extends MonoidalReducer {\n  constructor() {\n    super(SetMonoid);\n  }\n  static analyze(script) {\n    return reduce(new this(), script).extract();\n  }\n  reduceArrowExpression(node, {\n    params,\n    body\n  }) {\n    if (node.body.type === 'FunctionBody' && hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceArrowExpression(node, {\n      params,\n      body\n    }).add(node);\n  }\n  reduceClassDeclaration() {\n    return SetMonoid.empty();\n  }\n  reduceClassExpression() {\n    return SetMonoid.empty();\n  }\n  reduceFunctionDeclaration(node, {\n    name,\n    params,\n    body\n  }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceFunctionDeclaration(node, {\n      name,\n      params,\n      body\n    }).add(node);\n  }\n  reduceFunctionExpression(node, {\n    name,\n    params,\n    body\n  }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceFunctionExpression(node, {\n      name,\n      params,\n      body\n    }).add(node);\n  }\n  reduceGetter(node, {\n    name,\n    body\n  }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceGetter(node, {\n      name,\n      body\n    }).add(node);\n  }\n  reduceMethod(node, {\n    name,\n    params,\n    body\n  }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceMethod(node, {\n      name,\n      params,\n      body\n    }).add(node);\n  }\n  reduceScript(node, {\n    directives,\n    statements\n  }) {\n    if (hasStrict(node.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceScript(node, {\n      directives,\n      statements\n    }).add(node);\n  }\n  reduceSetter(node, {\n    name,\n    param,\n    body\n  }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceSetter(node, {\n      name,\n      param,\n      body\n    }).add(node);\n  }\n};","map":{"version":3,"names":["reduce","MonoidalReducer","require","SetMonoid","constructor","set","empty","Set","concat","b","merge","extract","add","e","hasStrict","directives","some","d","rawValue","s1","s2","out","forEach","v","module","exports","StrictnessReducer","analyze","script","reduceArrowExpression","node","params","body","type","reduceClassDeclaration","reduceClassExpression","reduceFunctionDeclaration","name","reduceFunctionExpression","reduceGetter","reduceMethod","reduceScript","statements","reduceSetter","param"],"sources":["/Users/binarychai3/Documents/React js Projects/first-react/node_modules/shift-scope/src/strictness-reducer.js"],"sourcesContent":["const { reduce, MonoidalReducer } = require('shift-reducer');\n\n// TODO this file should live elsewhere\n\nclass SetMonoid { // nb not immutable\n  constructor(set) {\n    this.set = set;\n  }\n\n  static empty() {\n    return new SetMonoid(new Set);\n  }\n\n  concat(b) {\n    return new SetMonoid(merge(this.set, b.set));\n  }\n\n  extract() {\n    return this.set;\n  }\n\n  add(e) {\n    // this happens to work, since, as used in StrictnessReducer, .add is never called until after something has been merged, so the identity element is never mutated.\n    // to do this in an immutable fashion, uncomment the line below. \n    // this.set = merge(new Set, this.set);\n    this.set.add(e);\n    return this;\n  }\n}\n\nfunction hasStrict(directives) {\n  return directives.some(d => d.rawValue === 'use strict');\n}\n\nfunction merge(s1, s2) {\n  let out = new Set;\n  s1.forEach(v => out.add(v));\n  s2.forEach(v => out.add(v));\n  return out;\n}\n\n// Given a Script, the analyze method returns a set containing all ArrowExpression, FunctionDeclaration, FunctionExpression, and Script nodes which are sloppy mode. All other ArrowExpression, FunctionDeclaration, FunctionExpression, and Script nodes are strict.\nmodule.exports = class StrictnessReducer extends MonoidalReducer {\n  constructor() {\n    super(SetMonoid);\n  }\n\n  static analyze(script) {\n    return reduce(new this, script).extract();\n  }\n\n  reduceArrowExpression(node, { params, body }) {\n    if (node.body.type === 'FunctionBody' && hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceArrowExpression(node, { params, body }).add(node);\n  }\n\n  reduceClassDeclaration() {\n    return SetMonoid.empty();\n  }\n\n  reduceClassExpression() {\n    return SetMonoid.empty();\n  }\n\n  reduceFunctionDeclaration(node, { name, params, body }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceFunctionDeclaration(node, { name, params, body }).add(node);\n  }\n\n  reduceFunctionExpression(node, { name, params, body }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceFunctionExpression(node, { name, params, body }).add(node);\n  }\n\n  reduceGetter(node, { name, body }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceGetter(node, { name, body }).add(node);\n  }\n\n  reduceMethod(node, { name, params, body }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceMethod(node, { name, params, body }).add(node);\n  }\n\n  reduceScript(node, { directives, statements }) {\n    if (hasStrict(node.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceScript(node, { directives, statements }).add(node);\n  }\n\n  reduceSetter(node, { name, param, body }) {\n    if (hasStrict(node.body.directives)) {\n      return SetMonoid.empty();\n    }\n    return super.reduceSetter(node, { name, param, body }).add(node);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}