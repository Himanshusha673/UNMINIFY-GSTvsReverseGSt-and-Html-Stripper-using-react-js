{"ast":null,"code":"/**\n * Copyright 2015 Shape Security, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Variable = require('./variable');\nclass ScopeType {\n  constructor(name) {\n    this.name = name;\n  }\n}\nScopeType.GLOBAL = new ScopeType('Global');\nScopeType.MODULE = new ScopeType('Module');\nScopeType.SCRIPT = new ScopeType('Script');\nScopeType.ARROW_FUNCTION = new ScopeType('ArrowFunction');\nScopeType.FUNCTION = new ScopeType('Function');\nScopeType.FUNCTION_NAME = new ScopeType('FunctionName'); // named function expressions\nScopeType.CLASS_NAME = new ScopeType('ClassName'); // named class expressions\nScopeType.PARAMETERS = new ScopeType('Parameters');\nScopeType.PARAMETER_EXPRESSION = new ScopeType('ParameterExpression');\nScopeType.WITH = new ScopeType('With');\nScopeType.CATCH = new ScopeType('Catch');\nScopeType.BLOCK = new ScopeType('Block');\nclass Scope {\n  constructor({\n    children,\n    variables,\n    through,\n    type,\n    isDynamic,\n    astNode\n  }) {\n    this.children = children;\n    this.through = through;\n    this.type = type;\n    this.astNode = astNode;\n    this.variables = new Map();\n    variables.forEach(v => this.variables.set(v.name, v));\n    this.variableList = [];\n    for (let x of this.variables.values()) {\n      this.variableList.push(x);\n    }\n    this.dynamic = isDynamic || type === ScopeType.WITH || type === ScopeType.GLOBAL;\n  }\n  isGlobal() {\n    return this.type === ScopeType.GLOBAL;\n  }\n  lookupVariable(name) {\n    return this.variables.get(name);\n  }\n}\nclass GlobalScope extends Scope {\n  constructor({\n    children,\n    variables,\n    through,\n    astNode\n  }) {\n    super({\n      children,\n      variables,\n      through,\n      type: ScopeType.GLOBAL,\n      isDynamic: true,\n      astNode\n    });\n    through.forEachEntry((v, k) => {\n      this.variables.set(k, new Variable(k, v, []));\n    });\n    this.variableList = [];\n    for (let x of this.variables.values()) {\n      this.variableList.push(x);\n    }\n  }\n}\nmodule.exports = {\n  ScopeType,\n  Scope,\n  GlobalScope\n};","map":{"version":3,"names":["Variable","require","ScopeType","constructor","name","GLOBAL","MODULE","SCRIPT","ARROW_FUNCTION","FUNCTION","FUNCTION_NAME","CLASS_NAME","PARAMETERS","PARAMETER_EXPRESSION","WITH","CATCH","BLOCK","Scope","children","variables","through","type","isDynamic","astNode","Map","forEach","v","set","variableList","x","values","push","dynamic","isGlobal","lookupVariable","get","GlobalScope","forEachEntry","k","module","exports"],"sources":["/Users/binarychai3/Documents/React js Projects/first-react/node_modules/shift-scope/src/scope.js"],"sourcesContent":["/**\n * Copyright 2015 Shape Security, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Variable = require('./variable');\n\nclass ScopeType {\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nScopeType.GLOBAL = new ScopeType('Global');\nScopeType.MODULE = new ScopeType('Module');\nScopeType.SCRIPT = new ScopeType('Script');\nScopeType.ARROW_FUNCTION = new ScopeType('ArrowFunction');\nScopeType.FUNCTION = new ScopeType('Function');\nScopeType.FUNCTION_NAME = new ScopeType('FunctionName'); // named function expressions\nScopeType.CLASS_NAME = new ScopeType('ClassName'); // named class expressions\nScopeType.PARAMETERS = new ScopeType('Parameters');\nScopeType.PARAMETER_EXPRESSION = new ScopeType('ParameterExpression');\nScopeType.WITH = new ScopeType('With');\nScopeType.CATCH = new ScopeType('Catch');\nScopeType.BLOCK = new ScopeType('Block');\n\nclass Scope {\n  constructor({ children, variables, through, type, isDynamic, astNode }) {\n    this.children = children;\n    this.through = through;\n    this.type = type;\n    this.astNode = astNode;\n\n    this.variables = new Map;\n    variables.forEach(v => this.variables.set(v.name, v));\n\n    this.variableList = [];\n    for (let x of this.variables.values()) {\n      this.variableList.push(x);\n    }\n\n    this.dynamic = isDynamic || type === ScopeType.WITH || type === ScopeType.GLOBAL;\n  }\n\n  isGlobal() {\n    return this.type === ScopeType.GLOBAL;\n  }\n\n  lookupVariable(name) {\n    return this.variables.get(name);\n  }\n}\n\nclass GlobalScope extends Scope {\n  constructor({ children, variables, through, astNode }) {\n    super({ children, variables, through, type: ScopeType.GLOBAL, isDynamic: true, astNode });\n    through.forEachEntry((v, k) => {\n      this.variables.set(k, new Variable(k, v, []));\n    });\n    this.variableList = [];\n    for (let x of this.variables.values()) {\n      this.variableList.push(x);\n    }\n  }\n}\n\nmodule.exports = {\n  ScopeType,\n  Scope,\n  GlobalScope,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}