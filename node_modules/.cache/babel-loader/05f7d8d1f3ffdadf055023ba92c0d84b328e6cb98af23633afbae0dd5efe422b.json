{"ast":null,"code":"\"use strict\";\n\n/* global module, define */\nfunction mapEach(map, operation) {\n  var keys = map.keys();\n  var next;\n  while (!(next = keys.next()).done) {\n    operation(map.get(next.value), next.value, map);\n  }\n}\nvar Multimap = function () {\n  var mapCtor;\n  if (typeof Map !== 'undefined') {\n    mapCtor = Map;\n    if (!Map.prototype.keys) {\n      Map.prototype.keys = function () {\n        var keys = [];\n        this.forEach(function (item, key) {\n          keys.push(key);\n        });\n        return keys;\n      };\n    }\n  }\n  function Multimap(iterable) {\n    var self = this;\n    self._map = mapCtor;\n    if (Multimap.Map) {\n      self._map = Multimap.Map;\n    }\n    self._ = self._map ? new self._map() : {};\n    if (iterable) {\n      iterable.forEach(function (i) {\n        self.set(i[0], i[1]);\n      });\n    }\n  }\n\n  /**\n   * @param {Object} key\n   * @return {Array} An array of values, undefined if no such a key;\n   */\n  Multimap.prototype.get = function (key) {\n    return this._map ? this._.get(key) : this._[key];\n  };\n\n  /**\n   * @param {Object} key\n   * @param {Object} val...\n   */\n  Multimap.prototype.set = function (key, val) {\n    var args = Array.prototype.slice.call(arguments);\n    key = args.shift();\n    var entry = this.get(key);\n    if (!entry) {\n      entry = [];\n      if (this._map) this._.set(key, entry);else this._[key] = entry;\n    }\n    Array.prototype.push.apply(entry, args);\n    return this;\n  };\n\n  /**\n   * @param {Object} key\n   * @param {Object=} val\n   * @return {boolean} true if any thing changed\n   */\n  Multimap.prototype.delete = function (key, val) {\n    if (!this.has(key)) return false;\n    if (arguments.length == 1) {\n      this._map ? this._.delete(key) : delete this._[key];\n      return true;\n    } else {\n      var entry = this.get(key);\n      var idx = entry.indexOf(val);\n      if (idx != -1) {\n        entry.splice(idx, 1);\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @param {Object} key\n   * @param {Object=} val\n   * @return {boolean} whether the map contains 'key' or 'key=>val' pair\n   */\n  Multimap.prototype.has = function (key, val) {\n    var hasKey = this._map ? this._.has(key) : this._.hasOwnProperty(key);\n    if (arguments.length == 1 || !hasKey) return hasKey;\n    var entry = this.get(key) || [];\n    return entry.indexOf(val) != -1;\n  };\n\n  /**\n   * @return {Array} all the keys in the map\n   */\n  Multimap.prototype.keys = function () {\n    if (this._map) return makeIterator(this._.keys());\n    return makeIterator(Object.keys(this._));\n  };\n\n  /**\n   * @return {Array} all the values in the map\n   */\n  Multimap.prototype.values = function () {\n    var vals = [];\n    this.forEachEntry(function (entry) {\n      Array.prototype.push.apply(vals, entry);\n    });\n    return makeIterator(vals);\n  };\n\n  /**\n   *\n   */\n  Multimap.prototype.forEachEntry = function (iter) {\n    mapEach(this, iter);\n  };\n  Multimap.prototype.forEach = function (iter) {\n    var self = this;\n    self.forEachEntry(function (entry, key) {\n      entry.forEach(function (item) {\n        iter(item, key, self);\n      });\n    });\n  };\n  Multimap.prototype.clear = function () {\n    if (this._map) {\n      this._.clear();\n    } else {\n      this._ = {};\n    }\n  };\n  Object.defineProperty(Multimap.prototype, \"size\", {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      var total = 0;\n      mapEach(this, function (value) {\n        total += value.length;\n      });\n      return total;\n    }\n  });\n  Object.defineProperty(Multimap.prototype, \"count\", {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      return this._.size;\n    }\n  });\n  var safariNext;\n  try {\n    safariNext = new Function('iterator', 'makeIterator', 'var keysArray = []; for(var key of iterator){keysArray.push(key);} return makeIterator(keysArray).next;');\n  } catch (error) {\n    // for of not implemented;\n  }\n  function makeIterator(iterator) {\n    if (Array.isArray(iterator)) {\n      var nextIndex = 0;\n      return {\n        next: function () {\n          return nextIndex < iterator.length ? {\n            value: iterator[nextIndex++],\n            done: false\n          } : {\n            done: true\n          };\n        }\n      };\n    }\n\n    // Only an issue in safari\n    if (!iterator.next && safariNext) {\n      iterator.next = safariNext(iterator, makeIterator);\n    }\n    return iterator;\n  }\n  return Multimap;\n}();\nif (typeof exports === 'object' && module && module.exports) module.exports = Multimap;else if (typeof define === 'function' && define.amd) define(function () {\n  return Multimap;\n});","map":{"version":3,"names":["mapEach","map","operation","keys","next","done","get","value","Multimap","mapCtor","Map","prototype","forEach","item","key","push","iterable","self","_map","_","i","set","val","args","Array","slice","call","arguments","shift","entry","apply","delete","has","length","idx","indexOf","splice","hasKey","hasOwnProperty","makeIterator","Object","values","vals","forEachEntry","iter","clear","defineProperty","configurable","enumerable","total","size","safariNext","Function","error","iterator","isArray","nextIndex","exports","module","define","amd"],"sources":["/Users/binarychai3/Documents/React js Projects/first-react/node_modules/multimap/index.js"],"sourcesContent":["\"use strict\";\n\n/* global module, define */\n\nfunction mapEach(map, operation){\n  var keys = map.keys();\n  var next;\n  while(!(next = keys.next()).done) {\n    operation(map.get(next.value), next.value, map);\n  }\n}\n\nvar Multimap = (function() {\n  var mapCtor;\n  if (typeof Map !== 'undefined') {\n    mapCtor = Map;\n\n    if (!Map.prototype.keys) {\n      Map.prototype.keys = function() {\n        var keys = [];\n        this.forEach(function(item, key) {\n          keys.push(key);\n        });\n        return keys;\n      };\n    }\n  }\n\n  function Multimap(iterable) {\n    var self = this;\n\n    self._map = mapCtor;\n\n    if (Multimap.Map) {\n      self._map = Multimap.Map;\n    }\n\n    self._ = self._map ? new self._map() : {};\n\n    if (iterable) {\n      iterable.forEach(function(i) {\n        self.set(i[0], i[1]);\n      });\n    }\n  }\n\n  /**\n   * @param {Object} key\n   * @return {Array} An array of values, undefined if no such a key;\n   */\n  Multimap.prototype.get = function(key) {\n    return this._map ? this._.get(key) : this._[key];\n  };\n\n  /**\n   * @param {Object} key\n   * @param {Object} val...\n   */\n  Multimap.prototype.set = function(key, val) {\n    var args = Array.prototype.slice.call(arguments);\n\n    key = args.shift();\n\n    var entry = this.get(key);\n    if (!entry) {\n      entry = [];\n      if (this._map)\n        this._.set(key, entry);\n      else\n        this._[key] = entry;\n    }\n\n    Array.prototype.push.apply(entry, args);\n    return this;\n  };\n\n  /**\n   * @param {Object} key\n   * @param {Object=} val\n   * @return {boolean} true if any thing changed\n   */\n  Multimap.prototype.delete = function(key, val) {\n    if (!this.has(key))\n      return false;\n\n    if (arguments.length == 1) {\n      this._map ? (this._.delete(key)) : (delete this._[key]);\n      return true;\n    } else {\n      var entry = this.get(key);\n      var idx = entry.indexOf(val);\n      if (idx != -1) {\n        entry.splice(idx, 1);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * @param {Object} key\n   * @param {Object=} val\n   * @return {boolean} whether the map contains 'key' or 'key=>val' pair\n   */\n  Multimap.prototype.has = function(key, val) {\n    var hasKey = this._map ? this._.has(key) : this._.hasOwnProperty(key);\n\n    if (arguments.length == 1 || !hasKey)\n      return hasKey;\n\n    var entry = this.get(key) || [];\n    return entry.indexOf(val) != -1;\n  };\n\n\n  /**\n   * @return {Array} all the keys in the map\n   */\n  Multimap.prototype.keys = function() {\n    if (this._map)\n      return makeIterator(this._.keys());\n\n    return makeIterator(Object.keys(this._));\n  };\n\n  /**\n   * @return {Array} all the values in the map\n   */\n  Multimap.prototype.values = function() {\n    var vals = [];\n    this.forEachEntry(function(entry) {\n      Array.prototype.push.apply(vals, entry);\n    });\n\n    return makeIterator(vals);\n  };\n\n  /**\n   *\n   */\n  Multimap.prototype.forEachEntry = function(iter) {\n    mapEach(this, iter);\n  };\n\n  Multimap.prototype.forEach = function(iter) {\n    var self = this;\n    self.forEachEntry(function(entry, key) {\n      entry.forEach(function(item) {\n        iter(item, key, self);\n      });\n    });\n  };\n\n\n  Multimap.prototype.clear = function() {\n    if (this._map) {\n      this._.clear();\n    } else {\n      this._ = {};\n    }\n  };\n\n  Object.defineProperty(\n    Multimap.prototype,\n    \"size\", {\n      configurable: false,\n      enumerable: true,\n      get: function() {\n        var total = 0;\n\n        mapEach(this, function(value){\n          total += value.length;\n        });\n\n        return total;\n      }\n    });\n\n  Object.defineProperty(\n    Multimap.prototype,\n    \"count\", {\n      configurable: false,\n      enumerable: true,\n      get: function() {\n        return this._.size;\n      }\n    });\n\n  var safariNext;\n\n  try{\n    safariNext = new Function('iterator', 'makeIterator', 'var keysArray = []; for(var key of iterator){keysArray.push(key);} return makeIterator(keysArray).next;');\n  }catch(error){\n    // for of not implemented;\n  }\n\n  function makeIterator(iterator){\n    if(Array.isArray(iterator)){\n      var nextIndex = 0;\n\n      return {\n        next: function(){\n          return nextIndex < iterator.length ?\n            {value: iterator[nextIndex++], done: false} :\n          {done: true};\n        }\n      };\n    }\n\n    // Only an issue in safari\n    if(!iterator.next && safariNext){\n      iterator.next = safariNext(iterator, makeIterator);\n    }\n\n    return iterator;\n  }\n\n  return Multimap;\n})();\n\n\nif(typeof exports === 'object' && module && module.exports)\n  module.exports = Multimap;\nelse if(typeof define === 'function' && define.amd)\n  define(function() { return Multimap; });\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}