{"ast":null,"code":"/**\n * Copyright 2017 Shape Security, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {\n  whitespaceArray,\n  whitespaceBool,\n  idStartLargeRegex,\n  idStartBool,\n  idContinueLargeRegex,\n  idContinueBool\n} = require('./unicode');\nconst strictReservedWords = ['null', 'true', 'false', 'implements', 'interface', 'package', 'private', 'protected', 'public', 'static', 'let', 'if', 'in', 'do', 'var', 'for', 'new', 'try', 'this', 'else', 'case', 'void', 'with', 'enum', 'while', 'break', 'catch', 'throw', 'const', 'yield', 'class', 'super', 'return', 'typeof', 'delete', 'switch', 'export', 'import', 'default', 'finally', 'extends', 'function', 'continue', 'debugger', 'instanceof'];\nexports.isStrictModeReservedWord = id => {\n  return strictReservedWords.indexOf(id) !== -1;\n};\nexports.isWhiteSpace = ch => {\n  return ch < 128 ? whitespaceBool[ch] : ch === 0xA0 || ch > 0x167F && whitespaceArray.indexOf(ch) !== -1;\n};\nexports.isLineTerminator = ch => {\n  return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n};\nexports.isIdentifierStart = ch => {\n  return ch < 128 ? idStartBool[ch] : idStartLargeRegex.test(String.fromCodePoint(ch));\n};\nexports.isIdentifierPart = ch => {\n  return ch < 128 ? idContinueBool[ch] : idContinueLargeRegex.test(String.fromCodePoint(ch));\n};\nexports.isDecimalDigit = ch => {\n  return ch >= 48 && ch <= 57;\n};\nexports.getHexValue = rune => {\n  if (rune >= '0' && rune <= '9') {\n    return rune.charCodeAt(0) - 48;\n  }\n  if (rune >= 'a' && rune <= 'f') {\n    return rune.charCodeAt(0) - 87;\n  }\n  if (rune >= 'A' && rune <= 'F') {\n    return rune.charCodeAt(0) - 55;\n  }\n  return -1;\n};","map":{"version":3,"names":["whitespaceArray","whitespaceBool","idStartLargeRegex","idStartBool","idContinueLargeRegex","idContinueBool","require","strictReservedWords","exports","isStrictModeReservedWord","id","indexOf","isWhiteSpace","ch","isLineTerminator","isIdentifierStart","test","String","fromCodePoint","isIdentifierPart","isDecimalDigit","getHexValue","rune","charCodeAt"],"sources":["/Users/binarychai3/Documents/React js Projects/first-react/node_modules/shift-parser/src/utils.js"],"sourcesContent":["/**\n * Copyright 2017 Shape Security, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { whitespaceArray, whitespaceBool, idStartLargeRegex, idStartBool, idContinueLargeRegex, idContinueBool } = require('./unicode');\n\n\nconst strictReservedWords = [\n  'null',\n  'true',\n  'false',\n\n  'implements',\n  'interface',\n  'package',\n  'private',\n  'protected',\n  'public',\n  'static',\n  'let',\n\n  'if',\n  'in',\n  'do',\n  'var',\n  'for',\n  'new',\n  'try',\n  'this',\n  'else',\n  'case',\n  'void',\n  'with',\n  'enum',\n  'while',\n  'break',\n  'catch',\n  'throw',\n  'const',\n  'yield',\n  'class',\n  'super',\n  'return',\n  'typeof',\n  'delete',\n  'switch',\n  'export',\n  'import',\n  'default',\n  'finally',\n  'extends',\n  'function',\n  'continue',\n  'debugger',\n  'instanceof',\n];\n\nexports.isStrictModeReservedWord = id => {\n  return strictReservedWords.indexOf(id) !== -1;\n};\n\nexports.isWhiteSpace = ch => {\n  return ch < 128 ? whitespaceBool[ch] : ch === 0xA0 || ch > 0x167F && whitespaceArray.indexOf(ch) !== -1;\n};\n\nexports.isLineTerminator = ch => {\n  return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n};\n\nexports.isIdentifierStart = ch => {\n  return ch < 128 ? idStartBool[ch] : idStartLargeRegex.test(String.fromCodePoint(ch));\n};\n\nexports.isIdentifierPart = ch => {\n  return ch < 128 ? idContinueBool[ch] : idContinueLargeRegex.test(String.fromCodePoint(ch));\n};\n\nexports.isDecimalDigit = ch => {\n  return ch >= 48 && ch <= 57;\n};\n\nexports.getHexValue = rune => {\n  if (rune >= '0' && rune <= '9') {\n    return rune.charCodeAt(0) - 48;\n  }\n  if (rune >= 'a' && rune <= 'f') {\n    return rune.charCodeAt(0) - 87;\n  }\n  if (rune >= 'A' && rune <= 'F') {\n    return rune.charCodeAt(0) - 55;\n  }\n  return -1;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA,eAAe;EAAEC,cAAc;EAAEC,iBAAiB;EAAEC,WAAW;EAAEC,oBAAoB;EAAEC;AAAe,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAGtI,MAAMC,mBAAmB,GAAG,CAC1B,MAAM,EACN,MAAM,EACN,OAAO,EAEP,YAAY,EACZ,WAAW,EACX,SAAS,EACT,SAAS,EACT,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,KAAK,EAEL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,SAAS,EACT,SAAS,EACT,UAAU,EACV,UAAU,EACV,UAAU,EACV,YAAY,CACb;AAEDC,OAAO,CAACC,wBAAwB,GAAGC,EAAE,IAAI;EACvC,OAAOH,mBAAmB,CAACI,OAAO,CAACD,EAAE,CAAC,KAAK,CAAC,CAAC;AAC/C,CAAC;AAEDF,OAAO,CAACI,YAAY,GAAGC,EAAE,IAAI;EAC3B,OAAOA,EAAE,GAAG,GAAG,GAAGZ,cAAc,CAACY,EAAE,CAAC,GAAGA,EAAE,KAAK,IAAI,IAAIA,EAAE,GAAG,MAAM,IAAIb,eAAe,CAACW,OAAO,CAACE,EAAE,CAAC,KAAK,CAAC,CAAC;AACzG,CAAC;AAEDL,OAAO,CAACM,gBAAgB,GAAGD,EAAE,IAAI;EAC/B,OAAOA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,MAAM,IAAIA,EAAE,KAAK,MAAM;AACrE,CAAC;AAEDL,OAAO,CAACO,iBAAiB,GAAGF,EAAE,IAAI;EAChC,OAAOA,EAAE,GAAG,GAAG,GAAGV,WAAW,CAACU,EAAE,CAAC,GAAGX,iBAAiB,CAACc,IAAI,CAACC,MAAM,CAACC,aAAa,CAACL,EAAE,CAAC,CAAC;AACtF,CAAC;AAEDL,OAAO,CAACW,gBAAgB,GAAGN,EAAE,IAAI;EAC/B,OAAOA,EAAE,GAAG,GAAG,GAAGR,cAAc,CAACQ,EAAE,CAAC,GAAGT,oBAAoB,CAACY,IAAI,CAACC,MAAM,CAACC,aAAa,CAACL,EAAE,CAAC,CAAC;AAC5F,CAAC;AAEDL,OAAO,CAACY,cAAc,GAAGP,EAAE,IAAI;EAC7B,OAAOA,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAI,EAAE;AAC7B,CAAC;AAEDL,OAAO,CAACa,WAAW,GAAGC,IAAI,IAAI;EAC5B,IAAIA,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE;IAC9B,OAAOA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;EAChC;EACA,IAAID,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE;IAC9B,OAAOA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;EAChC;EACA,IAAID,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE;IAC9B,OAAOA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;EAChC;EACA,OAAO,CAAC,CAAC;AACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}