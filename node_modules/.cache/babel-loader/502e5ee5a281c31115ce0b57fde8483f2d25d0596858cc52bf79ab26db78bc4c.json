{"ast":null,"code":"var _jsxFileName = \"/Users/binarychai3/Documents/React js Projects/first-react/src/components/htmlStripper.js\",\n  _s = $RefreshSig$();\n// HtmlStripper.js\nimport React, { useState } from 'react';\nimport './HtmlStripper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HtmlStripper = () => {\n  _s();\n  const [htmlInput, setHtmlInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [stripAllTags, setStripAllTags] = useState(true);\n  const stripHtml = () => {\n    try {\n      let strippedHtml = htmlInput;\n      if (stripAllTags) {\n        strippedHtml = strippedHtml.replace(/<[^>]*>/g, ''); // Remove all HTML tags\n      } else {\n        // Remove specific HTML tags\n        strippedHtml = strippedHtml.replace(/<script.*?>.*?<\\/script>/gi, ''); // Remove <script> tags\n        strippedHtml = strippedHtml.replace(/<style.*?>.*?<\\/style>/gi, ''); // Remove <style> tags\n      }\n\n      // Preserve line breaks\n      strippedHtml = strippedHtml.replace(/<br\\s*\\/?>/gi, '\\n');\n\n      // Replace consecutive line breaks with a single line break\n      strippedHtml = strippedHtml.replace(/(\\n\\s*){2,}/g, '\\n');\n\n      // Trim whitespace (only leading and trailing spaces)\n      strippedHtml = strippedHtml.trim();\n      setOutput(strippedHtml);\n      document.getElementById('outputContainer').classList.add('active');\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Error stripping HTML');\n      setOutput('');\n    }\n  };\n  const copyToClipboard = () => {\n    const textarea = document.createElement('textarea');\n    textarea.value = output;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"html-stripper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textfield\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: htmlInput,\n        onChange: e => setHtmlInput(e.target.value),\n        placeholder: \"Paste HTML here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: stripAllTags,\n          onChange: () => setStripAllTags(!stripAllTags)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \" Strip All Tags\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), \" Remove Scripts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"submitButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stripHtml,\n        class: \"button-63\",\n        children: \"Strip HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        class: \"button-63\",\n        children: \"Copy to Clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"outputContainer\",\n      className: output ? 'active' : '',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stripped HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textfield\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: output,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HtmlStripper, \"qDbkNRTKQnU6TVp5joEy7zmoiyg=\");\n_c = HtmlStripper;\nexport default HtmlStripper;\nvar _c;\n$RefreshReg$(_c, \"HtmlStripper\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HtmlStripper","_s","htmlInput","setHtmlInput","output","setOutput","errorMessage","setErrorMessage","stripAllTags","setStripAllTags","stripHtml","strippedHtml","replace","trim","document","getElementById","classList","add","error","copyToClipboard","textarea","createElement","value","body","appendChild","select","execCommand","removeChild","className","children","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","id","onClick","class","readOnly","_c","$RefreshReg$"],"sources":["/Users/binarychai3/Documents/React js Projects/first-react/src/components/htmlStripper.js"],"sourcesContent":["// HtmlStripper.js\nimport React, { useState } from 'react';\nimport './HtmlStripper.css';\n\nconst HtmlStripper = () => {\n  const [htmlInput, setHtmlInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [stripAllTags, setStripAllTags] = useState(true);\n\n  const stripHtml = () => {\n    try {\n      let strippedHtml = htmlInput;\n  \n      if (stripAllTags) {\n        strippedHtml = strippedHtml.replace(/<[^>]*>/g, ''); // Remove all HTML tags\n      } else {\n        // Remove specific HTML tags\n        strippedHtml = strippedHtml.replace(/<script.*?>.*?<\\/script>/gi, ''); // Remove <script> tags\n        strippedHtml = strippedHtml.replace(/<style.*?>.*?<\\/style>/gi, ''); // Remove <style> tags\n      }\n  \n      // Preserve line breaks\n      strippedHtml = strippedHtml.replace(/<br\\s*\\/?>/gi, '\\n');\n  \n      // Replace consecutive line breaks with a single line break\n      strippedHtml = strippedHtml.replace(/(\\n\\s*){2,}/g, '\\n');\n  \n      // Trim whitespace (only leading and trailing spaces)\n      strippedHtml = strippedHtml.trim();\n  \n      setOutput(strippedHtml);\n      document.getElementById('outputContainer').classList.add('active');\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Error stripping HTML');\n      setOutput('');\n    }\n  };\n\n  const copyToClipboard = () => {\n    const textarea = document.createElement('textarea');\n    textarea.value = output;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n  };\n  return (\n    <div className=\"html-stripper\">\n    <div className='textfield'>\n    <textarea\n        value={htmlInput}\n        onChange={(e) => setHtmlInput(e.target.value)}\n        placeholder=\"Paste HTML here...\"\n       \n      ></textarea>\n    </div>\n     \n      <div className=\"options\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={stripAllTags}\n            onChange={() => setStripAllTags(!stripAllTags)}\n          /> Strip All Tags\n        </label>\n        <label>\n          <input type=\"checkbox\" /> Remove Scripts\n        </label>\n       \n      </div>\n      <div id='submitButton'>\n  <button onClick={stripHtml} class=\"button-63\">Strip HTML</button>\n  <button onClick={copyToClipboard} class=\"button-63\">Copy to Clipboard</button>\n</div>\n      \n      <div id=\"outputContainer\" className={output ? 'active' : ''}>\n        <h2>Stripped HTML</h2>\n \n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        <div className='textfield'>\n        <textarea value={output} readOnly></textarea>\n        </div>\n      \n      </div>\n    </div>\n  );\n};\n\nexport default HtmlStripper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}